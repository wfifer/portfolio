# Travis CI (MIT License) configuration file for the php-typography libryry.
# @link https://travis-ci.org/

# For use with the wp-Typography WordPress plugin.
# @link https://github.com/mundschenk-at/wp-typography

# Ditch sudo and use containers.
# @link http://docs.travis-ci.com/user/migrating-from-legacy/#Why-migrate-to-container-based-infrastructure%3F
# @link http://docs.travis-ci.com/user/workers/container-based-infrastructure/#Routing-your-build-to-container-based-infrastructure
sudo: false
dist: trusty

# Declare project language.
# @link http://about.travis-ci.org/docs/user/languages/php/
language: php

# Declare versions of PHP to use. Use one decimal max.
# @link http://docs.travis-ci.com/user/build-configuration/
matrix:
    fast_finish: true

    include:
        # minimum version for activating wp-Typography 5.6.0, aliased to a recent 5.6.x version
        - php: '5.6'
          env: SNIFF=1
        # aliased to a recent 7.0 version
        - php: '7.0'
          env: SNIFF=1
        # aliased to a recent 7.1 version
        - php: '7.1'
          env: SNIFF=1

# Use this to prepare the system to install prerequisites or dependencies.
# e.g. sudo apt-get update.
# Failures in this section will result in build status 'errored'.
before_install:
    - if [[ "$SNIFF" == "1" ]]; then composer remove phpstan/phpstan phpbench/phpbench --dev; fi
    - if [[ "$SNIFF" == "1" ]]; then composer install; fi
    - if [[ "$SNIFF" == "1" ]]; then phpenv rehash; fi

# Use this to prepare your build for testing.
# e.g. copy database configurations, environment variables, etc.
# Failures in this section will result in build status 'errored'.
before_script:
    - export PHP_FILES_DIR=/tmp/php_files
    - export PHP_FILES_LIST=$PHP_FILES_DIR/php_files_list

# Run test script commands.
# Default is specific to project language.
# All commands must exit with code 0 on success. Anything else is considered failure.
script:
    # Generate list of relevant PHP files.
    - mkdir $PHP_FILES_DIR
    - find -L src/ -name '*.php' > $PHP_FILES_LIST
    # Search for PHP syntax errors.
    - cat $PHP_FILES_LIST | tr '\n' '\0' | xargs -0 -n 1 -P 4 php -l;
    # WordPress Coding Standards.
    - if [[ "$SNIFF" == "1" ]]; then composer phpcs; fi
    # Unit tests.
    - if [[ "$SNIFF" == "1" ]]; then composer test; fi

# Receive notifications for build results.
# @link http://docs.travis-ci.com/user/notifications/#Email-notifications
notifications:
    email: false
