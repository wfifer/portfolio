@import '../mixins/variables';

$project-scale: 0.625;

.site-header {
	position: fixed;
	top: 0;
	left: 0;
	transform: translateZ(-1px);

	height: 100%;
	width: 100%;

	background: $color-bg;

	@include font-display-black;

	transition: all $transition-thumbnails;
	will-change: transform, filter;

	&.-thumbnails-open {
		transform: scale(0.9) translateZ(-1px);

		// filter: blur(5px);

		.project-shadow {
			opacity: 0 !important;

			transition: none !important;
		}
	}

	&.-banner {
		.project-mask {
			&:not(.-selected) {
				opacity: 0;

				transition: none;
			}

			&.-selected {
				transform: translateY(-100%) translateY(#{ $body-padding-top + 12rem }) translateZ(0);

				.banner-background {
					opacity: 1;
					visibility: visible;
				}

				.mask-svg {
					transform: translate3d(-50%, -50%, 0) translateY(25vh);

					opacity: 0.75;
				}

				.gradient-overlay, .gradient-backdrop {
					// opacity: 0.5;
				}

				.project-hero {
					// opacity: 0.1 !important;
				}

				.project-info {
					// transform: translateY(-50%) translateY(12rem) translateZ(0);

					// opacity: 0.5;
					// mix-blend-mode: overlay;

					.project-tools {
						opacity: 0;
						visibility: hidden;
					}
				}
			}
		}

		.project-nav {
			transform: scale(1.1) rotateZ(0);

			opacity: 0;
		}
	}

	.inner {
		position: relative;

		width: 100%;
		height: 100%;
	}

	.project-mask {
		position:  absolute;
		top: 0;
		left: 0; 
		transform: translateZ(0);

		display: flex;
		justify-content: center;
		align-items: center;
		width: 100%;
		height: 100%;

		transition: all $transition-enter,
			opacity 0s 2s;

		&.-active {
			z-index: 5;

			.project-shadow {
				opacity: 1;

				.shadow {
					.nav-icon {
						&::after {
							opacity: 1;
						}
					}
				}

				.shadow-left {
					transform: translate3d(-100%, 0, 0);
				}

				.shadow-right {
					transform: translate3d(100%, 0, 0);
				}
			}

			.animate-mask &, .low-res & {
				.text-mask {
					transform: scale(1) rotateZ(0);
				}
			}

			.project-layer {
				svg {
					transform: scale(1) rotateZ(0) !important;
					transition-duration: 2s !important;
				}
			}

			.project-info {
				opacity: 1;
			}
		}

		&.-animate-out {
			overflow: hidden;

			pointer-events: none;

			.project-shadow {
				.shadow {
					opacity: 0;
				}
			}

			.animate-mask & {
				.text-mask {
					transform: scale($project-scale) rotateZ(0);
				}
			}

			.no-animate-mask & {
				.mask-svg {
					.svg {
						transform: translate(-50%, -50%) scale($project-scale) rotateZ(0);
					}
				}
			}

			.project-layer {
				@for $i from -1 through 1 {
					&[data-depth="#{ $i }"] {
						svg {
							transform: scale(#{ 0.5 + 0.25 * $i }) rotateZ(0) !important;
						}
					}
				}
			}

			.project-info {
				opacity: 0;
			}

			&.-left {
				.mask-inner {
					transform: translateX(-100%);
				}

				.svg-container {
					transform: translateX(100%);
				}

				.project-shadow {
					.shadow-right {
						transform: translate3d(0, 0, 0);
					}
				}
			}

			&.-right {
				.mask-inner {
					transform: translateX(100%);
				}

				.svg-container {
					transform: translateX(-100%);
				}
				
				.project-shadow {
					.shadow-left {
						transform: translate3d(0, 0, 0);
					}
				}
			}

			&.-left, &.-right {
				.project-shadow {
					.shadow {
						transition: all $transition-reveal-delayed, opacity 1.25s cubic-bezier(0.23, 1, 0.32, 1) 0.75s;
					}
				}
			}
		}

		&.-animate-in {
			z-index: 4;

			.project-shadow {
				opacity: 1;

				.shadow {
					transition: transform 0.5s 0.5s;
				}
				
				.shadow-left {
					transform: translate3d(-100%, 0, 0);
				}
				
				.shadow-right {
					transform: translate3d(100%, 0, 0);
				}
			}

			.animate-mask & .text-mask, .project-layer svg {
				transform: scale(1) rotateZ(0) !important;
			}

			.project-info {
				opacity: 1;
			}
		}

		.banner-background {
			position: absolute;
			top: 0;
			left: 0;

			width: 100%;
			height: 100%;

			opacity: 0;
			visibility: hidden;

			transition: all $transition-enter;
		}

		.mask-inner {
			position: absolute;
			left: 0;
			top: 0;
			transform: translateZ(0);

			height: 100%;
			width: 100%;
			overflow: hidden;

			background: $color-bg;

			transition: all $transition-reveal-delayed;
			will-change: transform;
		}

		.svg-container {
			position: relative;
			width: 100%;
			height: 100%;

			transition: all $transition-reveal-delayed;
		}

		.mask-svg {
			position: absolute;
			left: 50%;
			top: 50%;
			transform: translate3d(-50%, -50%, 0);

			transition: all $transition-enter;

			.svg-inner {
				position: relative;

				overflow: hidden;
				width: 100vw;
				height: (100vw * 2 / 3);
				min-height: 72vh;
				max-height: 100%;
			}

			.svg, .project-layer {
				position: absolute;
				left: 50%;
				top: 50%;
				transform: translate(-50%, -50%);

				width: 100%;
				min-width: 150vh;
				max-width: 1600px;
			}

			.project-layer {
				pointer-events: none;
			}

			.no-animate-mask & {
				.svg {
					transition: transform $transition-reveal;
					will-change: transform;
				}

				.svg-clipped {
					clip-path: none !important;
				}
			}

			.animate-mask & {
				.svg-clipped {
					mask: none !important;
				}
			}

			.btn-enter-project {
				fill: transparent;
				cursor: pointer;
			}

			text {
				fill: white;

				@include font-mask;
				font-size: 1000px;
			}

			.project-hero {				
				opacity: 0.35;
				mix-blend-mode: multiply;

				transition: all $transition;

				image {
					transform: translateZ(0);
				}
			}

			.project-hero, .gradient-overlay {
				pointer-events: none;

				will-change: opacity;
			}

			.gradient-overlay, .gradient-backdrop {
				transition: all $transition-enter;
			}
		}

		.text-mask {
			.animate-mask & {
				transform: scale($project-scale) rotateZ(0);
				transform-origin: center;

				transition: all $transition-reveal;
				will-change: transform;
			}

			rect {
				opacity: 0;

				transition: opacity $transition-enter;
			}
		}

		.project-layer {
			svg {
				transform-origin: center;

				transition: all $transition-reveal;
				will-change: transform;
			}
		
			@for $i from -1 through 1 {
				&[data-depth="#{ $i }"] {
					svg {
						transform: scale(#{ 0.1 + 0.05 * $i }) rotateZ(0);

						transition-duration: #{ 2 - $i * 0.5 }s;
					}
				}
			}

			image {
				transform: translate(-50%, -50%);
			}
		}

		.mask-canvas {
			position: absolute;
			top: 0;
			left: 0;

			width: 100%;
			height: 100%;
		}
	}

	.project-info {
		position: absolute;
		left: 0;
		right: 0;
		top: 50%;
		transform: translateY(-50%) translateZ(0);
		z-index: 1;

		display: flex;
		width: 100%;
		max-width: 1024px;
		height: 100%;
		// max-height: 72vh;
		max-height: 1024px;
		flex-direction: column;
		justify-content: flex-end;
		align-items: flex-end;
		margin: 0 auto;
		padding: 15rem;

		color: $color-charcoal;

		pointer-events: none;

		transition: opacity 1s;
		will-change: opacity;

		.project-title {
			width: 5.5em;
			max-width: 100%;

			font-size: 37.5rem;
			text-transform: uppercase;
			letter-spacing: -0.02em;
			line-height: 0.875em;
			text-align: right;

			pointer-events: none;

			div {
				overflow: hidden;
				padding: 0.03em;

				display: inline-block;

				span {
					display: inline-block;
				}
			}

		}

		.project-tools {
			display: flex;
			margin-top: 2rem;

			transition: all $transition-enter;
			will-change: opacity; 

			.icon-list-collab {
				display: flex;
				align-items: center;

				font-size: 5rem;
				@include font-display-black;
				text-transform: uppercase;
				letter-spacing: 0.05em;

				a {
					color: inherit;

					.text {
						border-bottom: 2px solid currentColor;
					}
				}
			}

			@media screen and (min-width: 577px) {
				.icon-list {
					&:not(:first-child) {
						margin-left: 7.5rem;
					}
				}
			}
		}
	}

	.project-shadow {
		position: fixed;
		left: 0;
		top: 0;
		width: 100%;
		height: 100vh;

		opacity: 0;

		pointer-events: none;

		transition: all 0s 0.5s;

		.shadow {
			position: absolute;
			top: 0;
			z-index: 10;

			height: 100%;
			width: 100%;
			overflow: hidden;
		}

		.shadow-left {
			left: 0;
			transform: translate3d(-100%, 0, 0);

			background: linear-gradient(to right, transparent 0%, rgba(black, 0.4) 80%, rgba(black, 0.4) 100%);
		}

		.shadow-right {
			right: 0;
			transform: translate3d(100%, 0, 0);

			background: linear-gradient(to left, transparent 0%, rgba(black, 0.4) 80%, rgba(black, 0.4) 100%);
		}
	}

	.project-nav {
		position: fixed;
		top: 0;
		left: 0;
		z-index: 100;
		transform: rotateZ(0);

		width: 100%;
		height: 100vh;

		transition: all $transition-enter;

		pointer-events: none;

		&.-disabled {
			.nav-item, .btn-thumbnails {
				opacity: 0.5;
			}
		}

		.btn-thumbnails, .nav-item {
			position: absolute;

			pointer-events: all;
		}

		.btn-thumbnails {
			top: 2rem;
			right: 2rem;
		}

		.nav-item {
			top: 50%;
			transform: translateY(-50%);
		}

		.nav-prev {
			left: 2rem;
		}

		.nav-next {
			right: 2rem;
		}
	}

	@media screen and (max-width: 1024px) {
		.project-info {
			.project-title {
				font-size: 30rem;
			}
		}
	}

	@media screen and (max-width: 768px) {
		.project-info {
			.project-title {
				font-size: 24rem;
			}
		}
	}

	@media screen and (max-width: 576px) {
		.svg-inner {
			transform: translateY(-25%);
		}
		
		.svg {
			min-width: 120vh !important;
			opacity: 0.9;
		}

		.project-info {
			padding-bottom: 5rem;
			align-items: center;

			.project-title {
				font-size: 13vw;
				text-align: center;
			}

			.project-tools {
				display: flex;
				width: 100%;
				flex-direction: column;
				align-items: center;

				> * {
					margin-top: 3rem;
				}
			}
		}
	}
}

.fade-enter-active {
	transition: opacity 1s $transition-spinner-delay;
	will-change: opacity;
}

.fade-enter-to {
	opacity: 1;
}

.fade-enter {
	opacity: 0;
}
