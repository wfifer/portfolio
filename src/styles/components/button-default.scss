@import '../mixins/variables';

.button-default {
	position: relative;

	padding: 0;
	margin: 0;

	background: transparent;
	border: 0;
	color: inherit;
	border-radius: 0;
	cursor: pointer;

	text-decoration: none;
	white-space: nowrap;
	text-transform: uppercase;
	letter-spacing: 0.05em;

	transition: all $transition;

	.-hide-focus & {
		outline: 0;
	}

	&.-with-label {
		.portfolio:not(.-hide-hover) & {
			.button-icon {
				&::after {
					content: attr(data-label);

					position: absolute;
					top: -4rem;
					left: 50%;
					transform: translate3d(-50%, -80%, 0);

					padding: 2rem 2.5rem;

					background: var(--color-light);
					border-radius: 2px;
					box-shadow: 0 2px 10px rgba(black, 0.33), 0 0 0 1px rgba(black, 0.1);
					color: var(--color-text);
					opacity: 0;
					visibility: hidden;

					font-size: 4rem;
					@include font-display-semibold;

					pointer-events: none;

					transition: all $transition;
				}
			}
			
			&:hover, .-show-focus &:focus {
				.button-icon {
					&::after {
						transform: translate3d(-50%, -100%, 0);

						opacity: 1;
						visibility: visible;
					}
				}
			}
		}
	}

	&.-active {
		.button-icon {
			background: linear-gradient(37deg, rgb(152, 34, 255) 20%, rgb(0, 101, 255) 80%);
			color: var(--color-light);
		}
	}

	&:not(.-with-label) {
		@include hover {
			.button-icon {
				box-shadow: 0 0 0 2px var(--color-light) inset;
				background: var(--color-bg);
				color: var(--color-light);
			}
		}
	}

	&.-with-text {
		.button-icon {
			width: auto;
			padding: 0 3rem;
		}

		.text {
			margin-left: 2rem;
		}
	}

	&::before {
		content: '';

		position: absolute;
		top: 1rem;
		left: 1rem;

		display: block;
		width: calc(100% - 2rem);
		height: calc(100% - 2rem);

		background: black;
		box-shadow: 0 0 10px 3px black;
		opacity: 0;
		border-radius: 5rem;

		transition: all $transition;
	}

	&.-reverse {
		.button-icon {
			background: var(--color-bg);
			color: var(--color-light);
		}

		@include hover {
			.button-icon {
				box-shadow: 0 0 0 2px var(--color-bg) inset;
				background: transparent;
				color: var(--color-bg);
			}
		}
	}

	&.-round {
		.button-icon {
			width: 12rem;
			height: 12rem;

			border-radius: 50%;
		}
	}

	.button-icon {
		position: relative;
		transform: translate3d(0, 0, 0);

		display: flex;
		justify-content: center;
		align-items: center;
		width: 10rem;
		height: 10rem;

		background: var(--color-light);
		color: var(--color-bg);
		// border-radius: 5rem;
		border-radius: 2px;
		box-shadow: 0 0 0 2px unquote('hsla(var(--color-bg--hsl), 0)') inset;

		transition: all $transition;

		.icon {
			width: 70%;
		}

		.fa-icon {
			width: auto;
			height: 60%;
		}
	}

	&.-color-reverse {
		.button-icon {
			background: var(--color-bg);
			color: var(--color-light);
			border: 2px solid var(--color-light);
		}

		&:not(.-with-label) {
			@include hover {
				.button-icon {
					background: var(--color-light);
					color: var(--color-bg);
				}
			}
		}
	}

	@media screen and (max-width: 375px) {
		.button-icon {
			width: 8rem;
			height: 8rem;
		}

		&:not(.-round) {
			.button-icon {
				font-size: 4rem;
			}
		}
	}
}