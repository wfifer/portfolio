@import '../mixins/variables';

@keyframes loading {
	0% {
		transform: scaleX(0.001);
	}

	100% {
		transform: scaleX(0.5);
	}
}

@keyframes loaded {
	0% {
		transform: scaleX(0.5);
	}

	100% {
		transform: scaleX(1);
	}
}

.project-content {
	$content-width: 1024px;

	position: relative;
	transform: translateZ(0);
	z-index: 1;

	padding: 12rem 0 16rem;
	min-height: calc(100vh - #{ $body-padding-top });

	background: $color-content-bg;
	color: $color-bg;

	&.-loading {
		&::before {
			opacity: 1;
			visibility: visible;

			animation: loading 2s;
			transition: all $transition;
		}

		.content-inner {
			transform: translateY(20rem);

			opacity: 0;

			transition: all $transition $transition-enter-time;
		}
	}

	&::before {
		content: '';

		position: absolute;
		top: -5px;
		left: 0;
		transform-origin: left top;
		transform: scaleX(1);

		width: 100%;
		height: 5px;

		background: linear-gradient(37deg, rgb(152, 34, 255) 20%, rgb(0, 101, 255) 80%);
		opacity: 0;
		visibility: hidden;

		transition: all $transition 0.7s;
		animation: loaded $transition-enter;
	}

	.content-inner {
		transition: all $transition;
	}

	.inner {
		padding: 0 10rem;
		margin: 0 auto;
		max-width: $content-width;
	}

	.project-header {
		position: relative;

		.project-title {
			position: absolute;
			opacity: 0;
			z-index: -1;

			pointer-events: none;
		}

		.project-spec {
			&:nth-child(2):not(:last-child), &:first-child:last-child {
				text-align: center;
			}

			&:nth-child(3) {
				text-align: right;
			}

			p {
				position: relative;
				max-width: 100%;

				display: inline-block;
			}

			a {
				position: relative;

				&:not(:hover):not(:focus) {
					&::after {
						color: inherit;
					}
				}

				@include hover {
					&::after {
						transform: translate(100%, 0);

						opacity: 1;
					}
				}

				&::after {
					content: '\f35d';

					position: absolute;
					bottom: -1.5rem;
					right: -3rem;
					transform: translate(100%, 0) translate(-2rem, 2rem);

					opacity: 0;

					@include font-icon;
					font-size: 1.2em;
					font-weight: 900;

					transition: all $transition;

					pointer-events: none;
				}

				&.-overflow-ellipsis {
					display: inline-block;
					height: 1.65em;
					max-width: 100%;

					.text {
						display: inline-block;
						overflow-x: hidden;
						text-overflow: ellipsis;
						white-space: nowrap;
						max-width: 100%;
					}
				}
			}
		}

		@include bp-min(tablet) {
			.project-specs {
				display: flex;
				width: calc(100% + #{ 2 * $table-gutter });
				margin-left: #{ - $table-gutter };
				justify-content: center;
			}

			.project-spec {
				width: (100% / 3);
				flex: 0 0 auto;
				padding: $table-gutter;
			}
		}

		@include bp(tablet) {
			.project-spec {
				&:not(:first-child) {
					margin-top: 10rem;
				}
			}
		}
	}

	.project-intro, .project-body, .project-footer {
		&:not(:first-child) {
			position: relative;

			margin-top: 12rem;
			padding-top: 12rem;

			&::before {
				content: '';

				position: absolute;
				top: 0;
				left: 50%;
				transform: translateX(-50%);

				width: 125px;
				height: 8px;

				background: {
					image: url('~/assets/img/divider-dots.png');
					size: 125px auto;
					position: center;
					repeat: no-repeat;
				}

				@include font-icon;
			}
		}
	}

	.project-intro {
		font-size: 6.5rem;
		hyphens: auto;
	}

	.project-footer {
		justify-content: center;
		display: flex;

		.social-list {
			display: flex;

			.list-item {
				padding: 0 3rem;
			}
		}
	}

	a {
		border-bottom: {
			width: 2px;
			style: solid;
			color: #ccc;
		}
		color: inherit;

		text-decoration: none;

		transition: all $transition;

		@include hover {
			color: $color-text;
		}
	}

	h2, h3, h4, h5, h6 {
		color: $color-text;
	}

	.project-intro {
		:not(:first-child) {
			margin-top: 8rem;
		}
	}

	.project-body {
		.block {
			> :first-child {
				margin-top: 0 !important;
			}
		}

		p, ul, ol {
			margin: 4rem 0;

			img {
				margin: 0;
			}
		}

		h2, h3 {
			margin: 12rem 0;
		}

		h4, h5 {
			margin: 8rem 0;
		}

		img, figure {
			margin: 12rem 0;
		}

		figure {
			img {
				margin: 0;
			}

			figcaption {
				margin-top: 3rem;

				color: rgba($color-text, 0.6);

				text-align: center;
				font-size: 4rem;
			}
		}

		.video-container {
			position: relative;

			padding-bottom: 67%;

			iframe {
				position: absolute;
				top: 0;
				left: 0;

				width: 100%;
				height: 100%;
			}
		}
	}
}

.t-project-enter-active, .t-project-leave-active, .t-project-move {
	transition: all $transition-enter;
}

.t-project-enter, .t-project-leave-to {
	transform: translateY(100vh) translateY(#{ - $body-padding-top }) translateZ(0) !important;
}

.t-project-content-leave-active, .t-projct-content-move {
	transition: all $transition-enter;
}

.t-project-content-enter-active {
	transition: all $transition-enter 0.9s;
}

.t-project-content-leave-active {
	position: absolute;

	width: 100%;
}

.t-project-content-enter {
	transform: translateY(20rem) translateZ(0);

	opacity: 0;
}

.t-project-content-leave-to {
	transform: translateY(20rem) translateZ(0);

	opacity: 0;
}