@import '../mixins/variables';

.category-thumbnails {
	$thumbnail-width: 280px;
	$thumbnail-gutter: 40px;

	.thumbnails-view {
		position: fixed;
		top: 0;
		left: 0;
		z-index: 100;
		transform: translateZ(0);

		width: 100%;
		height: 100%;
		overflow: hidden;
	}

	.thumbnails-inner {
		position: relative;

		display: flex;
		justify-content: center;
		align-items: center;
		height: 100%;
		width: 100%;
		padding: 15rem;

		background: $color-bg;

		transition: all $transition-thumbnails;
		will-change: transform, opacity, visibility;

		@media screen and (min-width: #{ 120px + $thumbnail-width * 2 + $thumbnail-gutter * 2 }) {
			background: rgba($color-bg, 0.925);
		}

		&::before, &::after {
			content: '';

			position: absolute;
			left: 50%;
			transform: translateX(-50%);
			z-index: 1;

			width: 100%;
			max-width: $thumbnail-width;
			height: 9rem;
		}

		&::before {
			top: 15rem;

			background: linear-gradient(to top, rgba($color-bg, 0) 0%, $color-bg 100%);
		}

		&::after {
			bottom: 15rem;

			background: linear-gradient(to bottom, rgba($color-bg, 0) 0%, $color-bg 100%);
		}

		.thumbnail-scroll {
			position: relative;

			max-height: 100%;
			width: calc(100% + 30rem);
			max-width: #{ $thumbnail-width + 40px };
			flex: 0 0 auto;
			overflow-y: auto;

			@supports (-webkit-overflow-scrolling: touch) {
				overflow-y: scroll;
				-webkit-overflow-scrolling: touch;
			}
		}

		@for $i from 2 through 5 {
			@media screen and (min-width: #{ 200px + $thumbnail-width * $i + $thumbnail-gutter * $i }) {
				&::before, &::after {
					max-width: #{ $thumbnail-width * $i + $thumbnail-gutter * ($i - 1) };
				}

				.thumbnail-scroll {
					max-width: #{ $thumbnail-width * $i + $thumbnail-gutter * $i + 40px };
				}
			}
		}
	}

	.thumbnail-list {
		display: flex;
		flex-wrap: wrap;
		justify-content: center;
		align-items: center;
		align-content: center;
		width: 100%;
		margin: 0 auto;
		height: 100%;
		padding: 5rem;

		.thumbnail {
			position: relative;
			transform: translateZ(0);

			padding: #{ $thumbnail-gutter / 2 };

			@media screen and (max-width: #{ 120px + $thumbnail-width * 2 + $thumbnail-gutter * 2 - 1px }) {
				padding: 10px #{ $thumbnail-gutter / 2 };
			}

			.thumbnail-inner {
				position: relative;
				transform: rotateZ(0);

				display: block;
				width: $thumbnail-width;
				padding-bottom: 62.5%;
				overflow: hidden;

				border-radius: 5px;

				@media screen and (min-width: #{ 120px + $thumbnail-width * 2 + $thumbnail-gutter * 2 }) {
					padding-bottom: 100%;
				}

				@include hover {
					.thumbnail-image {
						img {
							transform: scale(1.2) rotate(10deg) translateZ(0);

							opacity: 0.45;
						}
					}

					.thumbnail-content {
						transform: translateY(0);
						.text {
							transform: scale(0.9);
						}

						&::after {
							opacity: 1;
							visibility: visible;
						}
					}
				}

				.thumbnail-image, .thumbnail-content {
					position: absolute;
					top: 0;
					left: 0;

					width: 100%;
					height: 100%;
				}

				.thumbnail-image {
					transform: translateZ(0);

					overflow: hidden;

					opacity: 0.4;

					img {
						transform: translateZ(0);

						color: transparent;
						opacity: 0.3;

						transition: all $transition;
					}
				}

				.thumbnail-content {
					display: flex;
					flex-direction: column;
					align-items: center;
					justify-content: center;
					padding: 4rem;

					color: $color-charcoal;

					text-transform: uppercase;
					@include font-body-bold;
					text-align: center;
					letter-spacing: 0.04em;

					transition: transform $transition;

					.text {
						transition: all $transition;
					}

					&::after {
						content: attr(data-label);

						display: flex;
						align-items: center;
						height: 10rem;
						padding: 0 4rem;
						margin-top: 5rem;

						background: white;
						border-radius: 5rem;
						color: $color-charcoal;

						font-size: 4rem;

						transition: all $transition;
					}

					@media screen and (min-width: #{ 120px + $thumbnail-width * 2 + $thumbnail-gutter * 2 }) {
						padding: 10rem;
					}

					.portfolio:not(.-hide-hover) & {
						transform: translateY(1em);

						&::after {
							opacity: 0;
							visibility: hidden;
						}
					}
				}
			}
		}
	}

	.btn-exit {
		position: absolute;
		top: 2rem;
		right: 2rem;
		z-index: 10;
	}

	.category-heading {
		position: absolute;
		top: 6rem;
		width: 100%;
		transform: translateY(-50%);
		z-index: 10;

		text-align: center;
		text-transform: uppercase;
		letter-spacing: 0.04em;
		font-size: 5rem;

		transition: all $transition;

		@media screen and (min-width: #{ 120px + $thumbnail-width * 2 + $thumbnail-gutter * 2 }) {
			top: 7rem;

			font-size: 6rem;
		}

		* {
			position: relative;
		}

		.label {
			opacity: 0.6;
		}
	}

	.category-nav {
		position: absolute;
		bottom: 2rem;
		left: 50%;
		transform: translateX(-50%);
		z-index: 10;

		width: 100%;
		display: flex;
		justify-content: center;
	}
}

.t-thumbnails-leave-active {
	transition: all $transition-thumbnails;

	.thumbnails-inner {
		transform: scale(1.1);
	}
}

.t-thumbnails-leave {
	transform: scale(1);

	opacity: 1;

	.thumbnail-list {
		.thumbnail {
			.thumbnail-inner {
				transform: translateY(0);

				opacity: 1;
			}
		}
	}
}

.t-thumbnails-leave-to {
	transform: scale(1.1);

	opacity: 0;
}

.t-thumbnails-enter {
	.thumbnails-inner {
		transform: scale(1.1);

		opacity: 0;
	}

	.thumbnail-list {
		.thumbnail {
			.thumbnail-inner {
				// transform: translateY(50%);

				opacity: 0;
			}
		}
	}
}

.t-thumbnail-item-enter-active, .t-thumbnail-item-move {
	transition: all 0.35s map-get($ease, out-quad);
}

.t-thumbnail-item-leave-active {
	transition: all 0.35s map-get($ease, out-quad),
		opacity 0.2s;
}

.t-thumbnail-item-enter {
	opacity: 0;

	transform: translateY(50%) translateZ(0) !important;
}

.t-thumbnail-item-leave-to {
	opacity: 0;
}

.t-thumbnail-item-leave-active {
	position: absolute !important;
	z-index: -1;
}